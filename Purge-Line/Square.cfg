#not finished

[gcode_macro _SQUARE_PURGE]
variable_i: 0 #dont change
variable_side_length: 10 #the side length of the square
variable_speed: 50 #speed of the square printing
variable_inside_square: 1 #side length of the empty square in the middle
gcode:

    {% set printer_x_max = printer.toolhead.axis_maximum.x | int %}
    {% set printer_y_max = printer.toolhead.axis_maximum.y | int %}

    {% set nozzle = printer.configfile.config.["extruder"]["nozzle_diameter"] | float %}

    {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
    {% set x_min = (all_points | map(attribute=0) | min ) %}
    {% set x_max = (all_points | map(attribute=0) | max ) %}         #find max and min of the objects
    {% set y_min = (all_points | map(attribute=1) | min ) %}
    {% set y_max = (all_points | map(attribute=1) | max ) %}

    {% set mid_to_corner = ((side_length/2)**0.5) | float %}  #(16**0.5) returns square root of 16

    {% if x_min-((mid_to_corner)*2+3) > 0 and y_min-((mid_to_corner)*2+3) > 0 %}
        {% set origin_x = x_min-(mid_to_corner+3) %}
        {% set origin_y = y_min-(mid_to_corner+3) %}
    {% elif x_max+((mid_to_corner)*2+3) < printer_x_max and y_max+((mid_to_corner)*2+3) < printer_y_max %}
        {% set origin_x = x_max+(mid_to_corner+3) %}            #find the origin of the purge
        {% set origin_y = y_max+(mid_to_corner+3) %}
    {% else %}
        RESPOND TYPE=error MSG="Objects too large to fit purge line, continuing without"
    {% endif %}

    {% set loops = (side_length-inside_square)/nozzle | int %}         #find how many little squares can fit inside

    M83 #set extruder to relative

    G1 Z5 F800
    G1 X{origin_x+mid_to_corner} Y{origin_y} F6000
    G1 Z0.2 F800

    {% for i in range(0, loops) %}
        {% if loop.first %}
            G1 X{origin_x+mid_to_corner-nozzle*i} Y{origin_y} Z0.2 F{speed*60} E{side_length}/12
        {% else %}
            G1 X{origin_x+mid_to_corner-nozzle*i} Y{origin_y} Z0.2 F{speed*60}
        {% endif %}
        G1 X{origin_x} Y{origin_y-mid_to_corner+nozzle*i} F{speed*60} E{side_length}/12
        G1 X{origin_x-mid_to_corner+nozzle*i} Y{origin_y} F{speed*60} E{side_length}/12
        G1 X{origin_x} Y{origin_y+mid_to_corner-nozzle*i} F{speed*60} E{side_length}/12
        SET_GCODE_VARIABLE MACRO=_SQUARE_PURGE VARIABLE={i+1}
    {% endfor %}

    {% if printer.firmware_retraction is defined %}
        G10
    {% else %}
        G1 E-2 F1500
    {% endif %}
    
    G1 Z2 F800
